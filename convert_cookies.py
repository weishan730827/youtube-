import json
import time

def convert_cookies():
    try:
        # 读取JSON格式的cookies
        with open('cookies.txt', 'r', encoding='utf-8') as f:
            cookies = json.load(f)
        
        # 准备Netscape格式的内容
        netscape_cookies = []
        netscape_cookies.append('# Netscape HTTP Cookie File')
        netscape_cookies.append('# https://curl.haxx.se/rfc/cookie_spec.html')
        netscape_cookies.append('# This file was generated by yt-dlp.  Do not edit.')
        netscape_cookies.append('')
        
        for cookie in cookies:
            # 确保域名有点前缀
            domain = cookie.get('domain', '')
            if domain and not domain.startswith('.'):
                domain = '.' + domain
            
            # 处理过期时间
            expires = str(int(time.time() + 365*24*60*60)) if cookie.get('expirationDate') is None else str(int(cookie['expirationDate']))
            
            # 构建Netscape格式的cookie行
            cookie_line = f"{domain}\t"  # 域名(带点前缀)
            cookie_line += "TRUE\t"  # 包含子域名
            cookie_line += cookie.get('path', '/')+"\t"  # 路径
            cookie_line += str(cookie.get('secure', 'FALSE')).upper()+"\t"  # 是否安全
            cookie_line += expires+"\t"  # 过期时间
            cookie_line += cookie.get('name', '')+"\t"  # cookie名
            cookie_line += cookie.get('value', '')  # cookie值
            
            netscape_cookies.append(cookie_line)
        
        # 保存为新文件
        with open('cookies_netscape.txt', 'w', encoding='utf-8') as f:
            f.write('\n'.join(netscape_cookies))
        
        print("转换完成! 已生成 cookies_netscape.txt")
        
    except Exception as e:
        print(f"转换失败: {str(e)}")

if __name__ == "__main__":
    convert_cookies() 